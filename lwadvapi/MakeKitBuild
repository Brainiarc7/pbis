SUBDIRS='include unthreaded threaded'

configure()
{
    mk_config_header "include/config.h"

    lw_define_feature_macros

    MK_CFLAGS="$MK_CFLAGS -Wall -Werror -fno-strict-aliasing"

    mk_multiarch_do
        mk_check_sizeofs "long" "long int" "long long int"

        mk_check_endian

        case "$ENDIANNESS" in
            big) mk_define LW_BIG_ENDIAN;;
            little) mk_define LW_LITTLE_ENDIAN;;
        esac

        mk_check_functions \
            HEADERDEPS='stdlib.h time.h sys/time.h' \
            LIBDEPS="$LIB_RT" \
            strtol strtoul strtoll __strtoll strtoull __strtoull
    mk_multiarch_done

    mk_check_headers \
        FAIL=yes \
        uuid/uuid.h krb5.h gssapi.h lw/base.h ldap.h sasl/sasl.h sys/xattr.h attr/xattr.h
    
    mk_check_libraries \
        FAIL=yes \
        uuid krb5 k5crypto gssapi_krb5 lwbase ldap_r
    
    mk_check_headers \
        string.h strings.h sys/types.h sys/socket.h sys/varargs.h pthread.h DirectoryService/DirServices.h

    mk_check_types \
        HEADERDEPS="sys/types.h sys/socket.h" \
        socklen_t

    mk_check_libraries \
        socket nsl pthread rt

    if mk_check_function \
        HEADERDEPS="sys/socket.h" \
        LIBDEPS="$LIB_SOCKET $LIB_NSL" \
        PROTOTYPE="int getsockname(int,struct sockaddr*,socklen_t*)" ||
       mk_check_function \
        HEADERDEPS="sys/socket.h" \
        LIBDEPS="$LIB_SOCKET $LIB_NSL" \
        PROTOTYPE="int getsockname(int,__SOCKADDR_ARG,socklen_t*)" # Hack for clang on linux
    then
        mk_define GETSOCKNAME_TAKES_SOCKLEN_T 1
    elif mk_check_function \
        HEADERDEPS="sys/socket.h" \
        LIBDEPS="$LIB_SOCKET $LIB_NSL" \
        PROTOTYPE="int getsockname(int,struct sockaddr*,int*)"
    then
        mk_define GETSOCKNAME_TAKES_SOCKLEN_T 0
    else
        mk_fail "could not find usable getsockname()"
    fi

    mk_check_functions \
        HEADERDEPS='stdlib.h time.h sys/time.h' \
        LIBDEPS="$LIB_RT" \
        clock_settime settimeofday gettimeofday

    # clock_settime crashes on some versions of AIX
    if [ "$HAVE_CLOCK_SETTIME" = "yes" -a "$MK_HOST_OS" = "aix" ]
    then
        pbis_compile_and_run \
            CHECKNAME="clock_settime crashes" \
            HEADERDEPS="stdio.h stdlib.h time.h errno.h" \
            LIBDEPS="$LIB_RT" \
            CODE='
struct timespec timevar;
if (clock_gettime(CLOCK_REALTIME, &timevar) < 0)
{
    printf("clock_gettime failed with errno %d\n", errno);
    return 1;
}
if (clock_settime(CLOCK_PROCESS_CPUTIME_ID, &timevar) < 0)
{
    printf("clock_settime failed with errno %d\n", errno);
    return 0;
}
'
        if [ $result != 0 ]
        then
            mk_define CLOCK_SETTIME_CRASHES 1
        fi
    fi

    if mk_check_function \
        FUNCTION='isblank' \
        HEADERDEPS='ctype.h'
    then
        mk_define HAVE_DECL_ISBLANK 1
    else
        mk_define HAVE_DECL_ISBLANK 0
    fi

    if [ "$LW_SELINUX" = "yes" ]
    then
        mk_declare -s -o LIBSELINUX
        mk_define ENABLE_SELINUX 1
        mk_define LIBSELINUX "\"/${MK_LIBDIR##*/}/libselinux.so.1\""
    fi
}

make()
{
    mk_library \
        LIB=lwadvapi \
        GROUPS="threaded/threaded" \
        LIBDEPS="lwadvapi_nothr"
}
