%define INIT_DIR /etc/init.d

Name: 		@PKG_RPM_NAME@
Summary: 	Upgrade helper package for Likewise Open
Version: 	@PKG_RPM_VERSION@
Release:        @PKG_RPM_RELEASE@
License: 	Likewise Proprietary
URL: 		http://www.likewise.com/
Group: 		System Environment/Daemons
Prereq: grep, sh-utils
AutoReq: no

%description
Likewise provides Active Directory authentication.

%pre
UPGRADEDIR=@MK_PREFIX@-upgrade
LOG=/var/log/likewise-open-install.log
TLOG=/tmp/LikewiseOpenTemp.txt

DAEMONS_TO_HALT="lwmgmtd lwrdrd npcmuxd likewise-open likewise-winbindd centeris.com-lwiauthd centeris.com-gpagentd lwsmd lwregd netlogond lwiod dcerpcd eventlogd lsassd reapsysld"

# Display to screen and log file with a blank line between entries.
log()
{
    echo $@
    echo
    echo $@ >> $LOG
    echo >> $LOG
}

# Display to screen and log file with no blank line.
_log()
{
    echo $@
    echo $@ >> $LOG
}

# Display to file.
logfile()
{
    echo $@ >> $LOG
    echo >> $LOG
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file.
run()
{
    $@ > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err"
        _log `cat $TLOG`
        _log
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# Log only to file.
run_quiet()
{
    $@ > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
    else
        echo "Error: $@ returned $err  (ignoring and continuing)" >> $LOG
    fi
    cat $TLOG >> $LOG
    echo >> $LOG
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file and then exit.
run_or_fail()
{
    $@ > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err  (aborting this script)"
        _log `cat $TLOG`
        _log
        rm -f $TLOG > /dev/null 2>&1
        exit 1
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

determine_upgrade_type()
{
    VERSIONFILE=@MK_PREFIX@/data/VERSION
    ENTERPRISE_VERSIONFILE=@MK_PREFIX@/data/ENTERPRISE_VERSION

    if [ -f $ENTERPRISE_VERSIONFILE ]; then
        log "$ENTERPRISE_VERSIONFILE exists: Uninstall Likewise Enterprise before proceeding."
        exit 1
    elif [ -f @MK_SBINDIR@/gpagentd ]; then
        log "@MK_SBINDIR@/gpagentd exists: Uninstall Likewise Enterprise before proceeding."
        exit 1
    fi

    if [ -f $VERSIONFILE ]; then
        run_or_fail "mkdir -p ${UPGRADEDIR}"
        run_or_fail "cp $VERSIONFILE ${UPGRADEDIR}"

        run_or_fail "cat $VERSIONFILE"
        if [ -n "`grep '^VERSION=5.0' $VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving 5.0 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.1' $VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving 5.1 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.2' $VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving 5.2 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.3' $VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving 5.3 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=6.0' $VERSIONFILE`" ]; then
            UPGRADING_FROM_6_0=1
            log "Preserving 6.0 configuration in ${UPGRADEDIR}."
        fi
    fi
}

preserve_5_0123_configuration()
{
    if [ -n "${UPGRADING_FROM_5_0123}" ]; then
        if [ -f "@MK_SYSCONFDIR@/eventlogd.conf" ]; then
            run_or_fail "cp @MK_SYSCONFDIR@/eventlogd.conf ${UPGRADEDIR}"
        fi

        if [ -f "@MK_SYSCONFDIR@/lsassd.conf" ]; then
            run_or_fail "cp @MK_SYSCONFDIR@/lsassd.conf ${UPGRADEDIR}"
        fi

        if [ -f "@MK_SYSCONFDIR@/netlogon.conf" ]; then
            run_or_fail "cp @MK_SYSCONFDIR@/netlogon.conf ${UPGRADEDIR}"
        fi

        if [ -f "@LW_CACHEDIR@/db/pstore.db" ]; then
            run_or_fail "cp @LW_CACHEDIR@/db/pstore.db ${UPGRADEDIR}"
            run_or_fail "chmod 700 ${UPGRADEDIR}/pstore.db"
        fi
    fi
}

preserve_6_0_configuration()
{
    # Nothing to do for 6.0 -- all files will be upgraded in place
    return 0
}

preinstall()
{
    log "Package: Likewise Open Upgrade begins (`date`)"

    determine_upgrade_type

    # Try to deconfigure pam/nsswitch
    if [ -x @MK_BINDIR@/domainjoin-cli ]; then
        run_quiet "@MK_BINDIR@/domainjoin-cli configure --disable pam"
        run_quiet "@MK_BINDIR@/domainjoin-cli configure --disable nsswitch"
    fi

    # Stop any Likewise daemons
    if [ -x /etc/init.d/likewise ]; then
        run_quiet "/etc/init.d/likewise stop"
    fi

    if [ -x /etc/init.d/lwsmd ]; then
        run_quiet "/etc/init.d/lwsmd stop"
    fi

    if [ -x @MK_BINDIR@/lwsm ]; then
        run_quiet "@MK_BINDIR@/lwsm shutdown"
    fi
    for daemon in $DAEMONS_TO_HALT; do
        if [ -x /etc/rc.d/$daemon ]; then
            run_quiet "/etc/rc.d/$daemon stop"
        fi
        run_quiet "pkill -KILL -x $daemon"
    done

    preserve_5_0123_configuration

    preserve_6_0_configuration

    log "Package: Likewise Open Upgrade finished"
    exit 0
}

preinstall
