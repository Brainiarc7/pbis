#!/bin/sh

UPGRADEDIR=/var/lib/pbis-upgrade

LOG=/var/log/pbis-open-install.log
TLOG=/tmp/pbis-open-install.tmp

DAEMONS_TO_HALT="reapsysld lsassd lwiod netlogond dcerpcd eventlogd lwregd lwsmd"

# Display to screen and log file with a blank line between entries.
log()
{
    echo $@
    echo
    echo $@ >> $LOG
    echo >> $LOG
}

# Display to screen and log file with no blank line.
_log()
{
    echo $@
    echo $@ >> $LOG
}

# Display to file.
logfile()
{
    echo $@ >> $LOG
    echo >> $LOG
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file.
run()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err"
        _log `cat $TLOG`
        _log
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# Log only to file.
run_quiet()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
    else
        echo "Error: $@ returned $err  (ignoring and continuing)" >> $LOG
    fi
    cat $TLOG >> $LOG
    echo >> $LOG
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

# Execute command.
# If successful, note in log file.
# If not successful, note on screen and log file and then exit.
run_or_fail()
{
    "$@" > $TLOG 2>&1
    err=$?
    if [ $err -eq 0 ]; then
        echo "Success: $@" >> $LOG
        cat $TLOG >> $LOG
        echo >> $LOG
    else
        _log "Error: $@ returned $err  (aborting this script)"
        _log `cat $TLOG`
        _log
        rm -f $TLOG > /dev/null 2>&1
        exit 1
    fi
    rm -f $TLOG > /dev/null 2>&1
    return $err
}

determine_upgrade_type()
{
    LW_VERSIONFILE=/opt/likewise/data/VERSION
    LW_ENTERPRISE_VERSIONFILE=/opt/likewise/data/ENTERPRISE_VERSION
    VERSIONFILE=@MK_PREFIX@/data/VERSION
    ENTERPRISE_VERSIONFILE=@MK_PREFIX@/data/ENTERPRISE_VERSION

    if [ -f "$ENTERPRISE_VERSIONFILE" ]; then
        log "$ENTERPRISE_VERSIONFILE exists: Uninstall PowerBroker Identity Services Enterprise before proceeding."
        exit 1
    elif [ -f "@MK_SBINDIR@/gpagentd" ]; then
        log "@MK_SBINDIR@/gpagentd exists: Uninstall PowerBroker Identity Services Enterprise before proceeding."
        exit 1
    elif [ -f "$LW_ENTERPRISE_VERSIONFILE" ]; then
        log "$LW_ENTERPRISE_VERSIONFILE exists: Uninstall Likewise Enterprise before proceeding."
        exit 1
    elif [ -f "/opt/likewise/sbin/gpagentd" ]; then
        log "/opt/likewise/sbin/gpagentd exists: Uninstall Likewise Enterprise before proceeding."
        exit 1
    fi

    if [ -f "$LW_VERSIONFILE" ]; then
        run_or_fail mkdir -p "${UPGRADEDIR}"
        run_or_fail cp "$LW_VERSIONFILE" "${UPGRADEDIR}"

        run_or_fail cat "$LW_VERSIONFILE"
        if [ -n "`grep '^VERSION=5.0' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving Likewise Identity Services Open 5.0 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.1' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving Likewise Identity Services Open 5.1 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.2' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving Likewise Identity Services Open 5.2 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=5.3' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_5_0123=1
            log "Preserving Likewise Identity Services Open 5.3 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=6.0' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_6_0=1
            log "Preserving Likewise Open 6.0 configuration in ${UPGRADEDIR}."
        elif [ -n "`grep '^VERSION=6.1' $LW_VERSIONFILE`" ]; then
            UPGRADING_FROM_6_1=1
            log "Preserving Likewise Open 6.1 configuration in ${UPGRADEDIR}."
        fi
    elif [ -f "$VERSIONFILE" ]; then
        run_or_fail mkdir -p "${UPGRADEDIR}"
        run_or_fail cp "$VERSIONFILE" "${UPGRADEDIR}"
        
        UPGRADING_PBIS=1

        run_or_fail cat "$VERSIONFILE"
        if [ -n "`grep '^VERSION=6.5' $VERSIONFILE`" ]; then
            UPGRADING_FROM_6_5=1
            log "Upgrading PowerBroker Identity Services Open 6.5."
        fi
    fi
}

determine_join_status()
{
    if [ -n "$UPGRADING_FROM_5_0123" ]; then
        domain=`/opt/likewise/bin/lw-get-current-domain 2>/dev/null | sed -e 's/^Current Domain = //'`
        if [ -n "$domain" ]; then
            logfile "System is joined to $domain according to lw-get-current-domain"
            STATUS_JOINED=$domain
        else
            logfile "System does not appear to be joined according to lw-get-current-domain"
        fi
    elif [ -n "$UPGRADING_FROM_6_0" -o -n "$UPGRADING_FROM_6_1" ]; then
        domain=`/opt/likewise/bin/lw-lsa ad-get-machine account 2>/dev/null | grep '  DNS Domain Name: ' | sed -e 's/  DNS Domain Name: //'`
        if [ -n "$domain" ]; then
            logfile "System is joined to $domain according to lw-lsa ad-get-machine account"
            STATUS_JOINED=$domain
        else
            logfile "System does not appear to be joined according to lw-lsa ad-get-machine account"
        fi
    elif [ -n "$UPGRADING_PBIS" ]; then
        domain=`/opt/pbis/bin/lsa ad-get-machine account 2>/dev/null | grep '  DNS Domain Name: ' | sed -e 's/  DNS Domain Name: //'`
        if [ -n "$domain" ]; then
            logfile "System is joined to $domain according to lsa ad-get-machine account"
            STATUS_JOINED=$domain
        else
            logfile "System does not appear to be joined according to lsa ad-get-machine account"
        fi
    fi
}

preserve_join_status()
{
    if [ -n "$STATUS_JOINED" ]; then
        logfile "Saving STATUS_JOINED=$STATUS_JOINED"
        echo "STATUS_JOINED=$STATUS_JOINED" >> "${UPGRADEDIR}/status.txt"
    fi
}

preserve_5_0123_configuration()
{
    if [ -n "${UPGRADING_FROM_5_0123}" ]; then
        if [ -f "/etc/likewise/eventlogd.conf" ]; then
            run_or_fail cp /etc/likewise/eventlogd.conf "${UPGRADEDIR}"
        fi

        if [ -f "/etc/likewise/lsassd.conf" ]; then
            run_or_fail cp /etc/likewise/lsassd.conf "${UPGRADEDIR}"
        fi

        if [ -f "/etc/likewise/netlogon.conf" ]; then
            run_or_fail cp /etc/likewise/netlogon.conf "${UPGRADEDIR}"
        fi

        if [ -f "/var/lib/likewise/db/pstore.db" ]; then
            run_or_fail cp /var/lib/likewise/db/pstore.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/pstore.db"
        fi
    fi
}

preserve_6_0_configuration()
{
    if [ -n "${UPGRADING_FROM_6_0}" ]; then
        if [ -f "/var/lib/likewise/db/registry.db" ]; then
            run_or_fail cp /var/lib/likewise/db/registry.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/registry.db"
        fi

        if [ -f "/var/lib/likewise/db/sam.db" ]; then
            run_or_fail cp /var/lib/likewise/db/sam.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/sam.db"
        fi

        if [ -f "/var/lib/likewise/db/lwi_events.db" ]; then
            run_or_fail cp /var/lib/likewise/db/lwi_events.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/lwi_events.db"
        fi

        if [ -f "/var/lib/likewise/db/lsass-adcache.db" ]; then
            run_or_fail cp /var/lib/likewise/db/lsass-adcache.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/lsass-adcache.db"
        fi

        if [ -f "/var/lib/likewise/db/lsass-adcache.filedb" ]; then
            run_or_fail cp /var/lib/likewise/db/lsass-adcache.filedb "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/lsass-adcache.filedb"
        fi
    fi
}

preserve_6_1_configuration()
{
    if [ -n "${UPGRADING_FROM_6_1}" ]; then
        if [ -f "/var/lib/likewise/db/registry.db" ]; then
            run_or_fail cp /var/lib/likewise/db/registry.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/registry.db"
        fi

        if [ -f "/var/lib/likewise/db/sam.db" ]; then
            run_or_fail cp /var/lib/likewise/db/sam.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/sam.db"
        fi

        if [ -f "/var/lib/likewise/db/lwi_events.db" ]; then
            run_or_fail cp /var/lib/likewise/db/lwi_events.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/lwi_events.db"
        fi

        if [ -f "/var/lib/likewise/db/lsass-adcache.db" ]; then
            run_or_fail cp /var/lib/likewise/db/lsass-adcache.db "${UPGRADEDIR}"
            run_or_fail chmod 700 "${UPGRADEDIR}/lsass-adcache.db"
        fi

        for cache in /var/lib/likewise/db/lsass-adcache.filedb.* ; do
            if [ -f "$cache" ]; then
                cachefile=`basename $cache`
                run_or_fail cp "${cache}" "${UPGRADEDIR}"
                run_or_fail chmod 700 "${UPGRADEDIR}/${cachefile}"
            fi
        done
    fi
}

wait_for_lwsm_shutdown()
{
    LWSMD_WAIT_TIME=$1

    while [ "$LWSMD_WAIT_TIME" -ne 0 ]; do
        sleep 1
        run_quiet '@MK_BINDIR@/lwsm' list
        if [ $? -ne 0 ]; then
            return 0
        fi
        LWSMD_WAIT_TIME=`expr $LWSMD_WAIT_TIME - 1`
    done

    return 1
}

postinstall()
{
    logfile "Package: PowerBroker Identity Services Open Upgrade begins (`date`)"

    determine_upgrade_type

    determine_join_status

    # Try to deconfigure pam/nsswitch
    if [ -x @MK_BINDIR@/domainjoin-cli ]; then
        run_quiet '@MK_BINDIR@/domainjoin-cli' configure --disable pam
        run_quiet '@MK_BINDIR@/domainjoin-cli' configure --disable nsswitch
    fi

    if [ -x @MK_BINDIR@/lwsm ]; then
        run_quiet '@MK_BINDIR@/lwsm' shutdown
        wait_for_lwsm_shutdown 60
    fi
    if [ -x /usr/bin/zonename ]; then
        PKILLOPTS="-z `/usr/bin/zonename`"
    fi
    for daemon in $DAEMONS_TO_HALT; do
        if [ -x /usr/sbin/svcadm ]; then
            run_quiet /usr/sbin/svcadm disable $daemon
        elif [ -x /etc/init.d/$daemon ]; then
            run_quiet /etc/init.d/$daemon stop
        fi
        run_quiet pkill -KILL $PKILLOPTS -x $daemon
    done

    preserve_5_0123_configuration

    preserve_6_0_configuration

    preserve_6_1_configuration

#   preserve_6_5_configuration is not needed

    preserve_join_status

    logfile "Package: PowerBroker Identity Services Open Upgrade finished"
    exit 0
}

postinstall
