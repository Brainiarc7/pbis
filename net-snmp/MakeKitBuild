MODULES="compiler pbis"
SUBDIRS="snmplib apps"

configure()
{
    mk_config_header include/net-snmp/net-snmp-config-mk.h

    lw_define_feature_macros

    MK_CFLAGS="$MK_CFLAGS -DNETSNMP_NO_AUTOCONF_DEFINITIONS -DMK_CONFIG"

    # Use large file offsets on Solaris
    mk_define _LARGEFILE_SOURCE 1
    mk_define _FILE_OFFSET_BITS 64
    
    # Standard ANSI C headers are available
    mk_define STDC_HEADERS 1

    mk_check_headers \
        arpa/inet.h arpa/nameser.h crtdbg.h direct.h dirent.h dmalloc.h \
        fcntl.h grp.h inttypes.h io.h kstat.h limits.h locale.h malloc.h \
        ndir.h netdb.h net/if_dl.h net/if.h netinet/in.h nlist.h pthread.h \
        pwd.h regex.h stdlib.h string.h sys/dir.h sys/file.h sys/ioctl.h \
        syslog.h sys/ndir.h sys/param.h sys/select.h sys/socket.h \
        sys/sockio.h sys/stat.h sys/sysctl.h sys/systemcfg.h sys/systeminfo.h \
        sys/timeb.h sys/time.h sys/times.h sys/uio.h sys/un.h sys/utsname.h \
        unistd.h valgrind/memcheck.h winsock.h 

    mk_msg_checking "header time.h"
    if mk_check_header \
        HEADERDEPS="sys/time.h" \
        HEADER="time.h"
    then
        mk_msg_result "yes"
        if [ -n "HAVE_SYS_TIME_H" ]
        then
            mk_define "TIME_WITH_SYS_TIME" 1
        fi
    else
        mk_msg_result "no"
    fi

    # Bundled openssl has AES support
    mk_define HAVE_AES 1

    mk_check_libraries \
        ssl

    mk_check_types \
        HEADERDEPS="netinet/in.h sys/poll.h sys/socket.h unistd.h" \
        "long double" in_addr_t nfds_t socklen_t ssize_t

    mk_msg_checking "weak_key is a member of struct des_ks_struct"
    if mk_check_type \
        "((struct des_ks_struct *)0)->weak_key"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_DES_KS_STRUCT_WEAK_KEY 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "d_type is a member of struct dirent"
    if mk_check_type \
        HEADERDEPS="dirent.h" \
        "((struct dirent *)0)->d_type"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_DIRENT_D_TYPE 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "msg_control is a member of struct msghdr"
    if mk_check_type \
        HEADERDEPS="sys/types.h sys/socket.h" \
        "((struct msghdr *)0)->msg_control"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_MSGHDR_MSG_CONTROL 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "msg_flags is a member of struct msghdr"
    if mk_check_type \
        HEADERDEPS="sys/types.h sys/socket.h" \
        "((struct msghdr *)0)->msg_flags"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_MSGHDR_MSG_FLAGS 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "sin6_scope_id is a member of struct sockaddr_in6"
    if mk_check_type \
        HEADERDEPS="netinet/in.h sys/socket.h sys/types.h" \
        "((struct sockaddr_in6 *)0)->sin6_scope_id"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "sa_len is a member of struct sockaddr"
    if mk_check_type \
        HEADERDEPS="sys/socket.h sys/types.h" \
        "((struct sockaddr *)0)->sa_len"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_SOCKADDR_SA_LEN 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "__ss_family is a member of struct sockaddr_storage"
    if mk_check_type \
        HEADERDEPS="sys/socket.h sys/types.h" \
        "((struct sockaddr_storage *)0)->ss_family"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "ss_family is a member of struct sockaddr_storage"
    if mk_check_type \
        HEADERDEPS="sys/socket.h sys/types.h" \
        "((struct sockaddr_storage *)0)->ss_family"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY 1
    else
        mk_msg_result "no"
    fi

    mk_msg_checking "tm_gmtoff is a member of struct tm"
    if mk_check_type \
        HEADERDEPS="time.h" \
        "((struct tm *)0)->tm_gmtoff"
    then
        mk_msg_result "yes"
        mk_define HAVE_STRUCT_TM_TM_GMTOFF 1
    else
        mk_msg_result "no"
    fi

    mk_check_functions \
        HEADERDEPS="stdlib.h unistd.h sys/types.h sys/socket.h netdb.h pwd.h net/if.h arpa/inet.h grp.h regex.h sys/time.h sys/times.h locale.h dirent.h" \
        closesocket EVP_sha224 EVP_sha384 fork gai_strerror getaddrinfo \
        getgrnam gethostbyaddr gethostbyname gethostname getipnodebyname \
        getpwnam if_nametoindex inet_ntop inet_pton mkstemp read_config \
        read_premib_config regcomp setenv setitimer setlinebuf setlocale \
        setsid snprintf strcasestr strdup strerror strncasecmp strtoull \
        sysconf times vsnprintf readdir

    mk_msg_checking "Signal handler return type"
    if mk_try_compile \
        HEADERDEPS="signal.h"
        CODE='
typedef void (*test_sighandler_t)(int);
test_sighandler_t (*__func)(int, test_sighandler_t) = &signal;
return (char*) __func < (char*) &main ? 0 : 1;
'
    then
        mk_msg_result "void"
        mk_define RETSIGTYPE void
    else
        mk_msg_result "int"
        mk_define RETSIGTYPE int
    fi

    mk_define SNMPSHAREPATH "\"${LW_CONFIGDIR}/snmp\""
    mk_define NETSNMP_DEFAULT_MIBDIRS "\"\$HOME/.snmp/mibs:$SNMPSHAREPATH/mibs\""

    mk_define SNMPCONFPATH "\"${LW_CONFIGDIR}/snmp\""
    mk_define SNMPLIBPATH "\"$MK_LIBDIR/snmp\""

    mk_multiarch_do
        mk_check_sizeofs \
            HEADERDEPS="stdlib.h sys/un.h stdint.h" \
            int intmax_t long "long long" short
    mk_multiarch_done
}
