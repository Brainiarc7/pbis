# -*- mode: makefile; -*-
# -----------------------------------------------------------------------------
#   $RCSfile: Transaction.mak.in,v $
#  
#   See Copyright for the status of this software.
#  
#   The OpenSOAP Project
#   http://opensoap.jp/
# -----------------------------------------------------------------------------
#

SERVICE_NAME = TransactionABank

SAMPLE_MESSAGE_DIR = SampleMessages

#
console_client_PROGRAMFILES = TransactionClient
#
cgi_client_PROGRAMFILES = TransactionApp.cgi

CLIENT_HTML_DIR = TransactionHtml
CLIENT_HTML_FILES = \
	${CLIENT_HTML_DIR}/AcceptedFooter.html \
	${CLIENT_HTML_DIR}/AcceptedHeader.html \
	${CLIENT_HTML_DIR}/CommonFooter.html \
	${CLIENT_HTML_DIR}/CommonHeader.html \
	${CLIENT_HTML_DIR}/ErrorFooter.html \
	${CLIENT_HTML_DIR}/ErrorHeader.html \
	${CLIENT_HTML_DIR}/RequestFooter.html \
	${CLIENT_HTML_DIR}/RequestHeader.html \
	${CLIENT_HTML_DIR}/ResultFooter.html \
	${CLIENT_HTML_DIR}/ResultHeader.html 

#
cgi_service_PROGRAMFILES = TransactionABankService.cgi
#
stdio_service_PROGRAMFILES = TransactionABankService

SSML_IN_FILES = ${SERVICE_NAME}.ssml.in
SSML_FILES = ${SSML_IN_FILES:.in=}

#
PROGRAMS = \
	${console_client_PROGRAMFILES} \
	${cgi_client_PROGRAMFILES} \
	${stdio_service_PROGRAMFILES} \
	${cgi_service_PROGRAMFILES}

#
RPATH_COPTION = @RPATH_COPTION@
#
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
sysconfdir = @sysconfdir@
localstatedir = @localstatedir@
includedir = @includedir@
libdir = @libdir@

# OpenSOAP conf and data directory
OPENSOAP_SYSCONFDIR = @sysconfdir@
OPENSOAP_LOCALSTATEDIR = @localstatedir@
OPENSOAP_SERVICE_LOCALSTATEDIR = ${OPENSOAP_LOCALSTATEDIR}/services
SSML_DIR=${OPENSOAP_SYSCONFDIR}/ssml

#
SERVICE_DIR = @servicesdir@/${SERVICE_NAME}
SERVICE_LOCALSTATEDIR = ${OPENSOAP_SERVICE_LOCALSTATEDIR}/${SERVICE_NAME}

#
CGI_BIN_DIR = @CGI_BIN_DIR@

#
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

# libiconv
ICONV_LIBS = @ICONV_LIBS@
# libxml2 libs
XML2_LIBS = @XML2_LIBS@
# ssl libs
SSL_LIB_DIR = @SSL_LIB_DIR@
SSL_LIBS = @SSL_LIBS@
SSL_LDFLAGS = -L${SSL_LIB_DIR} ${RPATH_COPTION}${SSL_LIB_DIR}
SSL_LIBS = 
SSL_LDFLAGS =
#
LIBS = @LIBS@
CC = @CC@

#
COMMON_LIBS=${XML2_LIBS} ${ICONV_LIBS} ${SSL_LIBS} ${LIBS}

#
# DEBUG_CFLAGS = -g
CFLAGS = ${DEBUG_CFLAGS} -Wall -I${includedir}
#	-DSERVICE_DIR=\"${SERVICE_DIR}\" \
#	-DSERVICE_LOCALSTATEDIR=\"${SERVICE_LOCALSTATEDIR}\"
#	-DSERVICE_NAME=\"${SERVICE_NAME}\"
CGI_CFLAGS = ${CFLAGS} -DCONNECT_TYPE_CGI
CGI_CLIENT_CFLAGS = ${CFLAGS} -DCLIENT_CGI
CGI_SERVICE_CFLAGS = ${CFLAGS} -DCONNECT_TYPE_CGI
#
COMMON_LDFLAGS = -L${libdir} ${RPATH_COPTION}${libdir} ${SSL_LDFLAGS}

#
#SECURITY_LIBS = -lOpenSOAPSecurity
CLIENT_LIBS = ${SECURITY_LIBS} -lOpenSOAPClient
SERVICE_LIBS = -lOpenSOAPService ${CLIENT_LIBS}
CLIENT_LDFLAGS = ${COMMON_LDFLAGS} ${CLIENT_LIBS} ${COMMON_LIBS}
SERVICE_LDFLAGS = ${COMMON_LDFLAGS} ${SERVICE_LIBS} ${COMMON_LIBS}

#
SOURCES = TransactionClient.c TransactionApp.c TransactionABankService.c 
OBJS=${SOURCES:.c=.o} TransactionABankService.cgi.o

all: ${PROGRAMS} ${SSML_FILES}


## Make Client Programs

TransactionClient: TransactionClient.o
	${CC} -o $@ $^ ${CLIENT_LDFLAGS}

TransactionApp.cgi: TransactionClient.cgi.o TransactionApp.o 
	${CC} -o $@ $^ ${CLIENT_LDFLAGS}

TransactionClient.cgi.o: TransactionClient.c
	${CC} ${CGI_CLIENT_CFLAGS} -c -o $@ $^


## Make Service Programs

TransactionABankService: TransactionABankService.o
	${CC}  -o $@ $^ ${SERVICE_LDFLAGS}

TransactionABankService.cgi: TransactionABankService.cgi.o
	${CC}  -o $@ $^ ${SERVICE_LDFLAGS}

TransactionABankService.cgi.o: TransactionABankService.c
	${CC} ${CGI_CFLAGS} -c -o $@ $<

## Make SSML files
${SSML_FILES}: ${SSML_IN_FILES} Transaction.mak
	@for i in ${SSML_IN_FILES}; do \
		s=`echo $$i | sed 's/\.in$$//'`; \
		sed "s%\@servicesdir\@%${prefix}/services%g" > $$s < $$i; \
	done

## Install Programs

#
console-client-install: ${console_client_PROGRAMFILES}
	@if test -d ${DESTDIR}${bindir}; then \
		echo "${DESTDIR}${bindir} exits."; \
	else \
		echo "${DESTDIR}${bindir} does not exit."; \
		echo "mkdir -p ${DESTDIR}${bindir}."; \
		mkdir -p ${DESTDIR}${bindir}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${bindir}."; \
		${INSTALL_PROGRAM} \
			$$f ${DESTDIR}${bindir}; \
	done

cgi-client-programs-install: ${cgi_client_PROGRAMFILES}
	@if test -d ${DESTDIR}${CGI_BIN_DIR}; then \
		echo "${DESTDIR}${CGI_BIN_DIR} exits."; \
	else \
		echo "${DESTDIR}${CGI_BIN_DIR} does not exit."; \
		echo "mkdir -p ${DESTDIR}${CGI_BIN_DIR}."; \
		mkdir -p ${DESTDIR}${CGI_BIN_DIR}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${CGI_BIN_DIR}."; \
		${INSTALL_PROGRAM} \
			$$f ${DESTDIR}${CGI_BIN_DIR}; \
	done

cgi-client-datas-install: ${CLIENT_HTML_FILES}
	if test -d ${DESTDIR}${CGI_BIN_DIR}/${CLIENT_HTML_DIR}; then \
		echo "${DESTDIR}${CGI_BIN_DIR}/${CLIENT_HTML_DIR} exits."; \
	else \
		echo "${DESTDIR}${CGI_BIN_DIR}/${CLIENT_HTML_DIR} does not exit."; \
		echo "mkdir -p ${DESTDIR}${CGI_BIN_DIR}/${CLIENT_HTML_DIR}."; \
		mkdir -p ${DESTDIR}${CGI_BIN_DIR}/${CLIENT_HTML_DIR}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${CGI_BIN_DIR}."; \
		${INSTALL_PROGRAM} \
			-m 644 \
			$$f ${DESTDIR}${CGI_BIN_DIR}/$$f; \
	done

cgi-client-install: cgi-client-programs-install cgi-client-datas-install
#
client-install: console-client-install cgi-client-install

#
ssml-install: ${SSML_FILES}
	if test -d ${DESTDIR}${SSML_DIR}; then \
		echo "${DESTDIR}${SSML_DIR} exist."; \
	else \
		echo "mkdir -p ${DESTDIR}${SSML_DIR}."; \
		mkdir -p ${DESTDIR}${SSML_DIR}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${SSML_DIR}."; \
		${INSTALL_PROGRAM} \
			-m 0644 \
			$$f ${DESTDIR}${SSML_DIR}/$$f; \
	done

stdio-service-programs-install: ${stdio_service_PROGRAMFILES}
	@if test -d ${DESTDIR}${SERVICE_DIR}; then \
		echo "${DESTDIR}${SERVICE_DIR} exits."; \
	else \
		echo "${DESTDIR}${SERVICE_DIR} does not exit."; \
		echo "mkdir -p ${DESTDIR}${SERVICE_DIR}."; \
		mkdir -p ${DESTDIR}${SERVICE_DIR}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${SERVICE_DIR}."; \
		${INSTALL_PROGRAM} \
			$$f ${DESTDIR}${SERVICE_DIR}; \
	done

stdio-service-install: stdio-service-programs-install ssml-install

#
cgi-service-install: ${cgi_service_PROGRAMFILES}
	@if test -d ${DESTDIR}${CGI_BIN_DIR}; then \
		echo "${DESTDIR}${CGI_BIN_DIR} exits."; \
	else \
		echo "${DESTDIR}${CGI_BIN_DIR} does not exit."; \
		echo "mkdir -p ${DESTDIR}${CGI_BIN_DIR}."; \
		mkdir -p ${DESTDIR}${CGI_BIN_DIR}; \
	fi
	for f in $^ ; do \
		echo "$$f install to ${CGI_BIN_DIR}."; \
		${INSTALL_PROGRAM} \
			$$f ${DESTDIR}${CGI_BIN_DIR}; \
	done

service-install: cgi-service-install stdio-service-install ssml-install

#
install-samples: client-install service-install

## Install Client and Service Programs

install: cgi-client-install service-install

## clean
clean: 
	rm -f ${OBJS} ${PROGRAMS}


## Test Service Hookups for Success Case
rtest:
	cat a_bank_request.xml | ./TransactionABankService.cgi

ctest:
	cat a_bank_commit.xml | ./TransactionABankService.cgi

